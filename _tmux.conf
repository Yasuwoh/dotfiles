# tmux の全般的設定
###############################

# bind-key -r における連続入力受付時間を 1,500ms にする
set-option -g repeat-time 1500

# tmux を256色で表示できるようにする
set-option -g default-terminal screen-256color
set-option -g terminal-overrides 'xterm:color=256'

# スクロールバッファをとりあえず100,000行にする
set-option -g history-limit 100000

# メッセージは2秒間表示する
set-option -g display-time 2000

# ウィンドウを閉じたときに番号を詰める
set-option -g renumber-windows on
# ウィンドウ番号は 1 から始める
set-option -g base-index 1

# ペインを閉じたときに残す
set-window-option -g remain-on-exit on
# セッションの最後のウィンドウを閉じても、他にアタッチしているセッションがある場合はデタッチしない
set-option -g detach-on-destroy off

# アクティビティがあったときに # を付ける
set-window-option -g monitor-activity on
# ベルが鳴ったときに ! を付ける
set-window-option -g monitor-bell on
# 30秒間動きがないときに ~ を付ける
set-window-option -g monitor-silence 30

# エスケープシーケンス(\ek)によるウィンドウ名の変更を許容する
#set-window-option -g allow-rename on

# シェル周りの設定
##############################

# tmux 起動時のシェルをzshにする
set-option -g default-shell /usr/bin/zsh



# root キーバインドの設定
##############################

# ペインを閉じたとき、k で pane-kill, r で respawn する
bind-key -T root k if-shell -F '#{pane_dead}' {
        kill-pane
    } {
        send-keys -l k
    }
bind-key -T root r if-shell -F '#{pane_dead}' {
        respawn-pane
    } {
        send-keys -l r
    }



# プレフィクスキーとのコンビネーションキーバインドの設定
##############################

# prefixキーを C-t に変更
set-option -g prefix C-t
# C-b のキーバインドを解除
unbind-key C-b
# C-t t でウィンドウに C-t を送る
bind-key t send-prefix

# プレフィクスキーを連打すると直前のウィンドウへ移動
bind-key C-t last-window

# 大文字の R で設定ファイル再読込
bind-key R {
    source-file ~/.tmux.conf
    display-message 'Reloaded ~/.tmux.conf'
}

# 新しいウィンドウを C-t C-c で開けるようにする
bind-key C-c new-window

# 大文字の C で新しいセッションを開く
bind-key C new-session

# ウィンドウ分割の設定
bind-key S split-window # 縦分割
bind-key V split-window -h # 横分割

# 分割したウィンドウのサイズを揃える
bind-key = select-layout -E
# もともと = キーに対応するバッファ一覧コマンドは b へ
bind-key b choose-buffer -Z

# E で同期ペインをトグルする
bind-key E if-shell -F '#{pane_synchronized}' {
        set-window-option synchronize-panes off
        set-window-option window-style 'bg=#202020,fg=#a0a0a0'
        display-message "Stopped Synchronizing."
    } {
        set-window-option synchronize-panes on
        set-window-option window-style 'bg=black,fg=white'
        display-message "Started Synchronizing."
    }

# ウィンドウの前後移動
bind-key -r C-n {
    next-window
    display-message 'Type a following command...'
}
bind-key -r C-p {
    previous-window
    display-message 'Type a following command...'
}

# ペイン間の移動を C-t [hjkl] でできるようにする
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Control との同時押しではコマンドモードを抜けない
bind-key -r C-h {
    select-pane -L
    display-message 'Type a following command...'
}
#bind-key -r C-h select-pane -L がなぜかtmuではC-hのキーコードが ^? に化けるので、それに対応する
bind-key -r BSpace {
    select-pane -L
    display-message 'Type a following command...'
}
bind-key -r C-j {
    select-pane -D
    display-message 'Type a following command...'
}
bind-key -r C-k {
    select-pane -U
    display-message 'Type a following command...'
}
bind-key -r C-l {
    select-pane -R
    display-message 'Type a following command...'
}

# ペインリサイズモードの定義
bind-key -r -T my-pane-resize j resize-pane -D
bind-key -r -T my-pane-resize h resize-pane -L
bind-key -r -T my-pane-resize l resize-pane -R
bind-key -r -T my-pane-resize k resize-pane -U
bind-key -r -T my-pane-resize u swap-pane -U
bind-key -r -T my-pane-resize d swap-pane -D
bind-key -r -T my-pane-resize m swap-pane
bind-key -r -T my-pane-resize n rotate-window -U
bind-key -r -T my-pane-resize p rotate-window -D
bind-key r {
    switch-client -T my-pane-resize
    display-message 'Resize the pane [hjkl], Swap the pane [udm], Rotate the window [np]'
}

# ウィンドウ選択画面を開き、指定のウィンドウへペインを移動する
bind-key J choose-tree -Zw 'join-pane -t %%'

# ログ取りの設定
bind-key L if-shell -F '#{pane_pipe}' {
        pipe-pane
        display-message "Stopped piping."
    } {
    command-prompt -p "(log file)" -I "${HOME}/.tmux/log/#{host_short}.%Y%m%dT%H%M%S.log" {
            pipe-pane "cat_timestamp > %1"
            display-message "Started logging to %1."
        }
    }

# ハードコピーを取る
bind-key H {
        command-prompt -p '(hardcopy)' -I "${HOME}/.tmux/hardcopy/#{host_short}.%Y%m%dT%H%M%S.log" {
            capture-pane -e
            save-buffer "%1"
            delete-buffer
            display-message "Hardcopied to %1."
        }
    }



# コピーモードにおけるキーバインド設定
##############################
# マウスによる操作はマウスのセクションに集めます。

# vim キーバインドを使う
set-window-option -g mode-keys vi
# v で選択を始める
bind-key -T copy-mode-vi v send -X begin-selection
# V で行選択
bind-key -T copy-mode-vi V send -X select-line
# C-v で矩形選択
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
# y でヤンク
bind-key -T copy-mode-vi y send -X copy-selection
# Y で行ヤンク
bind-key -T copy-mode-vi Y send -X copy-line



# マウス操作の設定
##############################

# マウス操作を有効にする
set-option -g mouse on

# 右クリックで貼り付け
bind-key -n MouseDown2Pane paste-buffer

# ダブルクリックでコピーモードに入る。
# ただし、マウスアプリケーションモードのときはアプリケーションにマウスイベントを送る。
bind-key -n DoubleClick1Pane {
        if-shell -Ft = "#{mouse_any_flag}" {
            send-keys -M
        } {
            copy-mode -e
        }
    }

# ホイールアップしたとき、マウスアプリケーションモード(e.g. vim内)の場合はアプリケーションにマウスイベントを送り、
# そうでなければコピーモードに入る
bind-key -n WheelUpPane {
        if-shell -F -t = "#{mouse_any_flag}" {
            send-keys -M
        } {
            if-shell -Ft= "#{pane_in_mode}" {
                send-keys -M
            } {
                copy-mode -e
            }
        }
    }

# コピーモードで単にクリックしたとき、クリック先が同一ペインであれば選択解除しカーソル移動、別ペインであればそのペインを選択
bind-key -T copy-mode-vi MouseDown1Pane if-shell -F -t = "#{pane_active}" {
        send-keys -X clear-selection
    } {
        select-pane -t =
    }
# コピーモードではダブルクリックで単語選択してコピー
bind-key -T copy-mode-vi DoubleClick1Pane {
        select-pane
        send-keys -X select-word
        send-keys -X copy-selection
        send-keys -X select-word
    }
# コピーモードではトリプルクリックで行選択してコピー
bind-key -T copy-mode-vi TripleClick1Pane {
        select-pane
        send-keys -X select-line
        send-keys -X copy-selection
        send-keys -X select-line
    }
# コピーモードでドラッグすると選択範囲をコピー
bind-key -T copy-mode-vi MouseDrag1Pane {
        select-pane
        send-keys -X begin-selection
    }
bind-key -T copy-mode-vi MouseDragEnd1Pane {
        send-keys -X copy-selection
    }



# ペイン本体のカラー
##############################

# アクティブペインは通常の黒と白
set-window-option -g window-active-style 'bg=black,fg=white'
# 非アクティブペインは彩度を下げる
set-window-option -g window-style 'bg=#202020,fg=#a0a0a0'



# ステータスバーの設定
##############################

# 更新間隔を1秒にする(デフォルト15秒)
set-option -g status-interval 1
# ウィンドウリストは左寄せ
set-option -g status-justify left
# ステータスバー全般の色
set-option -g status-style 'bg=black,fg=white'

# 左側
set-option -g status-left-length 128
set-option -g status-left-style 'bg=black,fg=white'
set-option -g status-left '#[fg=green]#{host_short}#[default] #{session_id}#{window_id}#{pane_id}#[fg=yellow]#{?session_many_attached,&,}#{?client_readonly,R,}#{?client_prefix,:, }'

# 中央(ウィンドウリスト)
# カレントウィンドウの設定
set-window-option -g window-status-current-style 'bg=blue,fg=white'
set-window-option -g window-status-current-format "#{window_index}:#{window_name}[#{window_panes}]#{window_flags}#{?pane_synchronized,=,}"
# アクティビティがあったウィンドウの設定
set-window-option -g window-status-activity-style ''
# ベルが鳴ったウィンドウの設定
set-window-option -g window-status-bell-style blink
# その他のウィンドウの設定
set-window-option -g window-status-style 'bg=#404040,fg=white'
set-window-option -g window-status-format "#{window_index}:#{window_name}[#{window_panes}]#{window_flags}#{?pane_synchronized,=,}"

# 右側
set-option -g status-right-length 128
set-option -g status-right-style 'bg=black,fg=white'
set-option -g status-right '#(fetch_earthquake_data.py)#[fg=yellow](#(get_tmux_loadavg)) [#(get_tmux_free)]#[default] %Y/%m/%d %a %H:%M:%S %Z'



# ペインの設定
##############################

# 各ペインの最下行にステータスを表示
set-window-option -g pane-border-status bottom
# ペインステータスの内容
set-window-option -g pane-border-format "#{?pane_active,#[reverse],#[bg=#404040,fg=white]}#{pane_index}#{?pane_synchronized,=,}#{?pane_pipe,|,}#{?window_zoomed_flag,Z,}: [#[bold]#{pane_current_command}#[nobold]] #{pane_title}#[default]"
# ペイン境界線のスタイル(アクティブ)
set-window-option -g pane-active-border-style 'bg=black,fg=green'
# ペイン境界線のスタイル(その他)
set-window-option -g pane-border-style 'bg=#202020,fg=#404040'



# フックの設定
##############################

# screen の nethack 風
set-hook -g session-created 'display-message "Be careful! New tmux tonight."'
set-hook -g client-attached 'display-message "Welcome back to tmux!!"'

