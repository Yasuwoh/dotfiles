# users generic .zshrc file for zsh(1)

## Environment variable configuration
#
# LANG
#
export LANG=ja_JP.UTF-8
#
# below statements were commented out because of using Japanese even in root.
#case ${UID} in
#0)
#    LANG=C
#    ;;
#esac

## Enable zsh hook function
autoload -Uz add-zsh-hook

## Default shell configuration
#
# set prompt
#
autoload colors
colors
case ${UID} in
0)
    PROMPT="%F{cyan}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') %B%F{red}%/#%f%b "
    PROMPT2="%B%F{red}%_#%f%b "
    SPROMPT="%B%F{red}%r is correct? [n,y,a,e]:%f%b "
    ;;
*)
    PROMPT='%f[%F{red}%n%f@%F{green}%m%f %(1j.(%j).)%F{blue}%c%f${vcs_info_msg_0_}]%f%(0?.%%.%F{red}%%%f) '
	RPROMPT='in %F{blue}%/%f'
    PROMPT2='%F{red}%_%%%f '
    SPROMPT='%F{red}%r is correct? [n,y,a,e]:%f '
    ;;
esac

# auto change directory
#
setopt auto_cd

# auto directory pushd that you can get dirs list by cd -[tab]
#
setopt auto_pushd

# command correct edition before each completion attempt
#
setopt correct

# compacked complete list display
#
setopt list_packed

# no remove postfix slash of command line
#
setopt noautoremoveslash

# no beep sound when complete list displayed
#
setopt nolistbeep

# extended glob (filename expand)
#
# setopt extendedglob

## Keybind configuration
#
# emacs like keybind (e.x. Ctrl-a gets to line head and Ctrl-e gets
#   to end) and something additions
#
bindkey -e
bindkey "^[[1~" beginning-of-line # Home gets to line head
bindkey "^[[4~" end-of-line # End gets to line end
bindkey "^[[3~" delete-char # Del
# 何も入力せずエンターしたときに、時刻、exit code、とかは出したい。
# リポジトリだったら未push/未mergeとかも？
function do_enter() {
    RET=$?
    if [ -n "$BUFFER" ] ; then
        zle accept-line
        return 0
    fi
    echo
    echo "Date: `date '+%Y/%m/%d %H:%M:%S%z%Z'`, last exit code: $RET"
    zle reset-prompt
    return 0
}
zle -N do_enter
bindkey '^M' do_enter

# historical backward/forward search with linehead string binded to ^P/^N
#
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end

# disable xoff keybind
#
stty stop undef

# reverse menu completion binded to Shift-Tab
#
bindkey "\e[Z" reverse-menu-complete


## Command history configuration
#
HISTFILE=${HOME}/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data
setopt append_history       # append command history, not overwriting


## Completion configuration
#
fpath=(${HOME}/.zsh/functions/Completion ${fpath})
autoload -U compinit
compinit


## zsh editor
#
autoload zed


## zsh Version Control System (VCS) indicator
autoload -Uz vcs_info
function precmd_vcs_info () {
    vcs_info
}
add-zsh-hook precmd precmd_vcs_info

setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr '#'
zstyle ':vcs_info:git:*' unstagedstr '!'
zstyle ':vcs_info:git:*' formats \
    '/%F{red}%r%f:%F{green}%b%f%m%F{blue}%c%f%F{yellow}%u%f' \
    ' [%s]%r:%b%m%c%u'
zstyle ':vcs_info:git:*' actionformats \
    '/%F{red}%r%f:%F{green}%b%f%m%F{blue}%c%f%F{yellow}%u%f-%F{red}%a%f' \
    ' [%s]%r:%b%m%c%u-%a'
zstyle ':vcs_info:git+set-message:*' hooks \
    vcs-git-hook-begin \
    vcs-git-untracked \
    vcs-git-stash-count
function +vi-vcs-git-hook-begin() {
    if [[ "$1" -gt 0 ]] ; then
        return 1
    fi
    if [[ $(command git rev-parse --is-inside-work-tree 2>/dev/null) != 'true' ]] ; then
        return 1
    fi
    return 0
}
function +vi-vcs-git-untracked() {
    if command git status --porcelain 2>/dev/null \
            | awk '{print $1}' \
            | command grep -F '??' 2>&1 >/dev/null ; then
        hook_com[unstaged]+='?'
    fi
}
function +vi-vcs-git-stash-count() {
    local stash
    stash=$(command git stash list 2>/dev/null | wc -l | tr -d ' ')
    if [[ "${stash}" -gt 0 ]] ; then
        hook_com[misc]+="(${stash})"
    fi
}


## Prediction configuration
#
#autoload predict-on
#predict-off


## Alias configuration
#
# expand aliases before completing
#
setopt complete_aliases     # aliased ls needs if file/dir completions work

alias where="command -v"
alias j="jobs -l"

case "${OSTYPE}" in
freebsd*|darwin*)
    alias ls="ls -G -w"
    ;;
linux*)
    alias ls="ls --color"
    ;;
esac

alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"

alias du="du -h"
alias df="df -h"

alias su="su -l"

alias rm="rm -i"
alias mv="mv -i"

alias grep='grep --color=always'
alias less='less -R'

alias kachi='make'

## terminal configuration
#
case "${TERM}" in
xterm|xterm-color|screen*)
    export LSCOLORS=exfxcxdxbxegedabagacad
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
kterm-color)
    stty erase '^H'
    export LSCOLORS=exfxcxdxbxegedabagacad
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
kterm)
    stty erase '^H'
    ;;
cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
jfbterm-color)
    export LSCOLORS=gxFxCxdxBxegedabagacad
    export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;36;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
esac

# set terminal title including current directory
#
case "${TERM}" in
screen*)
    function precmd_screen_title() {
        # ハードステータス(ウィンドウタイトル)の設定
        echo -ne "\e]0;${USER}@${HOST%%.*}:${PWD}${vcs_info_msg_1_}\007"
        # screenのタイトルの設定
		echo -ne "\ek`basename ${SHELL}`@`basename ${PWD}`\e\\"
    }

    function preexec_screen_title() {
        echo -ne "\ek$1\e\\"
    }

	function zshexit_screen_title() {
		echo -ne "\ek[died at `date +'%F %T'`]\e\\"
	}

    add-zsh-hook precmd precmd_screen_title
    add-zsh-hook preexec preexec_screen_title
    add-zsh-hook zshexit zshexit_screen_title

    ;;
esac


## load user .zshrc configuration file
#
[ -f ${HOME}/.zshrc.local ] && source ${HOME}/.zshrc.local

[ -n "`which fortune 2> /dev/null`" ] && fortune -s

